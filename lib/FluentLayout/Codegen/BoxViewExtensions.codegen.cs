// This file is generated by FluentCodegen
// It does not make sense to change something here
// No stress :)
using System;
namespace Xamarin.Forms.Fluent
{
    public static partial class BoxViewExtensions
    {


        public static TBindable WithBoxViewChildrenReorderedEvent<TBindable>(this TBindable self,
            System.EventHandler handlerAction) where TBindable : BoxView
        {
            self.ChildrenReordered += handlerAction;

            return self;
        }

        public static TBindable ClearBoxViewChildrenReorderedHandlers<TBindable>(this TBindable self) where TBindable : BoxView
        {
            Xamarin.Forms.Fluent.EventExtensions.ClearEventInvocations(self, "ChildrenReordered");

            return self;
        }

        public static TBindable WithBoxViewFocusedEvent<TBindable>(this TBindable self,
            System.EventHandler<Xamarin.Forms.FocusEventArgs> handlerAction) where TBindable : BoxView
        {
            self.Focused += handlerAction;

            return self;
        }

        public static TBindable ClearBoxViewFocusedHandlers<TBindable>(this TBindable self) where TBindable : BoxView
        {
            Xamarin.Forms.Fluent.EventExtensions.ClearEventInvocations(self, "Focused");

            return self;
        }

        public static TBindable WithBoxViewMeasureInvalidatedEvent<TBindable>(this TBindable self,
            System.EventHandler handlerAction) where TBindable : BoxView
        {
            self.MeasureInvalidated += handlerAction;

            return self;
        }

        public static TBindable ClearBoxViewMeasureInvalidatedHandlers<TBindable>(this TBindable self) where TBindable : BoxView
        {
            Xamarin.Forms.Fluent.EventExtensions.ClearEventInvocations(self, "MeasureInvalidated");

            return self;
        }

        public static TBindable WithBoxViewSizeChangedEvent<TBindable>(this TBindable self,
            System.EventHandler handlerAction) where TBindable : BoxView
        {
            self.SizeChanged += handlerAction;

            return self;
        }

        public static TBindable ClearBoxViewSizeChangedHandlers<TBindable>(this TBindable self) where TBindable : BoxView
        {
            Xamarin.Forms.Fluent.EventExtensions.ClearEventInvocations(self, "SizeChanged");

            return self;
        }

        public static TBindable WithBoxViewUnfocusedEvent<TBindable>(this TBindable self,
            System.EventHandler<Xamarin.Forms.FocusEventArgs> handlerAction) where TBindable : BoxView
        {
            self.Unfocused += handlerAction;

            return self;
        }

        public static TBindable ClearBoxViewUnfocusedHandlers<TBindable>(this TBindable self) where TBindable : BoxView
        {
            Xamarin.Forms.Fluent.EventExtensions.ClearEventInvocations(self, "Unfocused");

            return self;
        }

        public static TBindable WithBoxViewBatchCommittedEvent<TBindable>(this TBindable self,
            System.EventHandler<Xamarin.Forms.Internals.EventArg<Xamarin.Forms.VisualElement>> handlerAction) where TBindable : BoxView
        {
            self.BatchCommitted += handlerAction;

            return self;
        }

        public static TBindable ClearBoxViewBatchCommittedHandlers<TBindable>(this TBindable self) where TBindable : BoxView
        {
            Xamarin.Forms.Fluent.EventExtensions.ClearEventInvocations(self, "BatchCommitted");

            return self;
        }

        public static TBindable WithBoxViewFocusChangeRequestedEvent<TBindable>(this TBindable self,
            System.EventHandler<Xamarin.Forms.VisualElement.FocusRequestArgs> handlerAction) where TBindable : BoxView
        {
            self.FocusChangeRequested += handlerAction;

            return self;
        }

        public static TBindable ClearBoxViewFocusChangeRequestedHandlers<TBindable>(this TBindable self) where TBindable : BoxView
        {
            Xamarin.Forms.Fluent.EventExtensions.ClearEventInvocations(self, "FocusChangeRequested");

            return self;
        }

        public static TBindable WithBoxViewChildAddedEvent<TBindable>(this TBindable self,
            System.EventHandler<Xamarin.Forms.ElementEventArgs> handlerAction) where TBindable : BoxView
        {
            self.ChildAdded += handlerAction;

            return self;
        }

        public static TBindable ClearBoxViewChildAddedHandlers<TBindable>(this TBindable self) where TBindable : BoxView
        {
            Xamarin.Forms.Fluent.EventExtensions.ClearEventInvocations(self, "ChildAdded");

            return self;
        }

        public static TBindable WithBoxViewChildRemovedEvent<TBindable>(this TBindable self,
            System.EventHandler<Xamarin.Forms.ElementEventArgs> handlerAction) where TBindable : BoxView
        {
            self.ChildRemoved += handlerAction;

            return self;
        }

        public static TBindable ClearBoxViewChildRemovedHandlers<TBindable>(this TBindable self) where TBindable : BoxView
        {
            Xamarin.Forms.Fluent.EventExtensions.ClearEventInvocations(self, "ChildRemoved");

            return self;
        }

        public static TBindable WithBoxViewDescendantAddedEvent<TBindable>(this TBindable self,
            System.EventHandler<Xamarin.Forms.ElementEventArgs> handlerAction) where TBindable : BoxView
        {
            self.DescendantAdded += handlerAction;

            return self;
        }

        public static TBindable ClearBoxViewDescendantAddedHandlers<TBindable>(this TBindable self) where TBindable : BoxView
        {
            Xamarin.Forms.Fluent.EventExtensions.ClearEventInvocations(self, "DescendantAdded");

            return self;
        }

        public static TBindable WithBoxViewDescendantRemovedEvent<TBindable>(this TBindable self,
            System.EventHandler<Xamarin.Forms.ElementEventArgs> handlerAction) where TBindable : BoxView
        {
            self.DescendantRemoved += handlerAction;

            return self;
        }

        public static TBindable ClearBoxViewDescendantRemovedHandlers<TBindable>(this TBindable self) where TBindable : BoxView
        {
            Xamarin.Forms.Fluent.EventExtensions.ClearEventInvocations(self, "DescendantRemoved");

            return self;
        }

        public static TBindable WithBoxViewPlatformSetEvent<TBindable>(this TBindable self,
            System.EventHandler handlerAction) where TBindable : BoxView
        {
            self.PlatformSet += handlerAction;

            return self;
        }

        public static TBindable ClearBoxViewPlatformSetHandlers<TBindable>(this TBindable self) where TBindable : BoxView
        {
            Xamarin.Forms.Fluent.EventExtensions.ClearEventInvocations(self, "PlatformSet");

            return self;
        }

        public static TBindable WithBoxViewPropertyChangedEvent<TBindable>(this TBindable self,
            System.ComponentModel.PropertyChangedEventHandler handlerAction) where TBindable : BoxView
        {
            self.PropertyChanged += handlerAction;

            return self;
        }

        public static TBindable ClearBoxViewPropertyChangedHandlers<TBindable>(this TBindable self) where TBindable : BoxView
        {
            Xamarin.Forms.Fluent.EventExtensions.ClearEventInvocations(self, "PropertyChanged");

            return self;
        }

        public static TBindable WithBoxViewBindingContextChangedEvent<TBindable>(this TBindable self,
            System.EventHandler handlerAction) where TBindable : BoxView
        {
            self.BindingContextChanged += handlerAction;

            return self;
        }

        public static TBindable ClearBoxViewBindingContextChangedHandlers<TBindable>(this TBindable self) where TBindable : BoxView
        {
            Xamarin.Forms.Fluent.EventExtensions.ClearEventInvocations(self, "BindingContextChanged");

            return self;
        }

        public static TBindable WithBoxViewPropertyChangingEvent<TBindable>(this TBindable self,
            Xamarin.Forms.PropertyChangingEventHandler handlerAction) where TBindable : BoxView
        {
            self.PropertyChanging += handlerAction;

            return self;
        }

        public static TBindable ClearBoxViewPropertyChangingHandlers<TBindable>(this TBindable self) where TBindable : BoxView
        {
            Xamarin.Forms.Fluent.EventExtensions.ClearEventInvocations(self, "PropertyChanging");

            return self;
        }
        
        public static TBindable BindColorBoxView<TBindable>(this TBindable self,
            string path,
            BindingMode mode = BindingMode.Default,
            IValueConverter converter = null,
            object converterParameter = null,
            string stringFormat = null,
            object source = null,
            object targetNullValue = null,
            object fallbackValue = null) where TBindable : BoxView
                => self.Bind(BoxView.ColorProperty, path, mode, converter, converterParameter, stringFormat, source, targetNullValue, fallbackValue);
        
        public static TBindable BindCornerRadiusBoxView<TBindable>(this TBindable self,
            string path,
            BindingMode mode = BindingMode.Default,
            IValueConverter converter = null,
            object converterParameter = null,
            string stringFormat = null,
            object source = null,
            object targetNullValue = null,
            object fallbackValue = null) where TBindable : BoxView
                => self.Bind(BoxView.CornerRadiusProperty, path, mode, converter, converterParameter, stringFormat, source, targetNullValue, fallbackValue);
    }
}