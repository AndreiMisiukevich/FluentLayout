// This file is generated by FluentCodegen
// It does not make sense to change something here
// No stress :)
using System;
namespace Xamarin.Forms.Fluent
{
    public static partial class SearchBarExtensions
    {


        public static TBindable SetSearchButtonPressedEvent<TBindable>(this TBindable self,
            System.EventHandler handlerAction) where TBindable : SearchBar
        {
            self.SearchButtonPressed += handlerAction;

            return self;
        }

        public static TBindable SetTextChangedEvent<TBindable>(this TBindable self,
            System.EventHandler<Xamarin.Forms.TextChangedEventArgs> handlerAction) where TBindable : SearchBar
        {
            self.TextChanged += handlerAction;

            return self;
        }

        public static TBindable SetChildrenReorderedEvent<TBindable>(this TBindable self,
            System.EventHandler handlerAction) where TBindable : SearchBar
        {
            self.ChildrenReordered += handlerAction;

            return self;
        }

        public static TBindable SetFocusedEvent<TBindable>(this TBindable self,
            System.EventHandler<Xamarin.Forms.FocusEventArgs> handlerAction) where TBindable : SearchBar
        {
            self.Focused += handlerAction;

            return self;
        }

        public static TBindable SetMeasureInvalidatedEvent<TBindable>(this TBindable self,
            System.EventHandler handlerAction) where TBindable : SearchBar
        {
            self.MeasureInvalidated += handlerAction;

            return self;
        }

        public static TBindable SetSizeChangedEvent<TBindable>(this TBindable self,
            System.EventHandler handlerAction) where TBindable : SearchBar
        {
            self.SizeChanged += handlerAction;

            return self;
        }

        public static TBindable SetUnfocusedEvent<TBindable>(this TBindable self,
            System.EventHandler<Xamarin.Forms.FocusEventArgs> handlerAction) where TBindable : SearchBar
        {
            self.Unfocused += handlerAction;

            return self;
        }

        public static TBindable SetBatchCommittedEvent<TBindable>(this TBindable self,
            System.EventHandler<Xamarin.Forms.Internals.EventArg<Xamarin.Forms.VisualElement>> handlerAction) where TBindable : SearchBar
        {
            self.BatchCommitted += handlerAction;

            return self;
        }

        public static TBindable SetFocusChangeRequestedEvent<TBindable>(this TBindable self,
            System.EventHandler<Xamarin.Forms.VisualElement.FocusRequestArgs> handlerAction) where TBindable : SearchBar
        {
            self.FocusChangeRequested += handlerAction;

            return self;
        }

        public static TBindable SetChildAddedEvent<TBindable>(this TBindable self,
            System.EventHandler<Xamarin.Forms.ElementEventArgs> handlerAction) where TBindable : SearchBar
        {
            self.ChildAdded += handlerAction;

            return self;
        }

        public static TBindable SetChildRemovedEvent<TBindable>(this TBindable self,
            System.EventHandler<Xamarin.Forms.ElementEventArgs> handlerAction) where TBindable : SearchBar
        {
            self.ChildRemoved += handlerAction;

            return self;
        }

        public static TBindable SetDescendantAddedEvent<TBindable>(this TBindable self,
            System.EventHandler<Xamarin.Forms.ElementEventArgs> handlerAction) where TBindable : SearchBar
        {
            self.DescendantAdded += handlerAction;

            return self;
        }

        public static TBindable SetDescendantRemovedEvent<TBindable>(this TBindable self,
            System.EventHandler<Xamarin.Forms.ElementEventArgs> handlerAction) where TBindable : SearchBar
        {
            self.DescendantRemoved += handlerAction;

            return self;
        }

        public static TBindable SetPlatformSetEvent<TBindable>(this TBindable self,
            System.EventHandler handlerAction) where TBindable : SearchBar
        {
            self.PlatformSet += handlerAction;

            return self;
        }

        public static TBindable SetPropertyChangedEvent<TBindable>(this TBindable self,
            System.ComponentModel.PropertyChangedEventHandler handlerAction) where TBindable : SearchBar
        {
            self.PropertyChanged += handlerAction;

            return self;
        }

        public static TBindable SetBindingContextChangedEvent<TBindable>(this TBindable self,
            System.EventHandler handlerAction) where TBindable : SearchBar
        {
            self.BindingContextChanged += handlerAction;

            return self;
        }

        public static TBindable SetPropertyChangingEvent<TBindable>(this TBindable self,
            Xamarin.Forms.PropertyChangingEventHandler handlerAction) where TBindable : SearchBar
        {
            self.PropertyChanging += handlerAction;

            return self;
        }
        
        public static TBindable BindSearchCommandSearchBar<TBindable>(this TBindable self,
            string path,
            BindingMode mode = BindingMode.Default,
            IValueConverter converter = null,
            object converterParameter = null,
            string stringFormat = null,
            object source = null,
            object targetNullValue = null,
            object fallbackValue = null) where TBindable : SearchBar
                => self.Bind(SearchBar.SearchCommandProperty, path, mode, converter, converterParameter, stringFormat, source, targetNullValue, fallbackValue);
        
        public static TBindable BindSearchCommandParameterSearchBar<TBindable>(this TBindable self,
            string path,
            BindingMode mode = BindingMode.Default,
            IValueConverter converter = null,
            object converterParameter = null,
            string stringFormat = null,
            object source = null,
            object targetNullValue = null,
            object fallbackValue = null) where TBindable : SearchBar
                => self.Bind(SearchBar.SearchCommandParameterProperty, path, mode, converter, converterParameter, stringFormat, source, targetNullValue, fallbackValue);
        
        public static TBindable BindTextSearchBar<TBindable>(this TBindable self,
            string path,
            BindingMode mode = BindingMode.Default,
            IValueConverter converter = null,
            object converterParameter = null,
            string stringFormat = null,
            object source = null,
            object targetNullValue = null,
            object fallbackValue = null) where TBindable : SearchBar
                => self.Bind(SearchBar.TextProperty, path, mode, converter, converterParameter, stringFormat, source, targetNullValue, fallbackValue);
        
        public static TBindable BindCancelButtonColorSearchBar<TBindable>(this TBindable self,
            string path,
            BindingMode mode = BindingMode.Default,
            IValueConverter converter = null,
            object converterParameter = null,
            string stringFormat = null,
            object source = null,
            object targetNullValue = null,
            object fallbackValue = null) where TBindable : SearchBar
                => self.Bind(SearchBar.CancelButtonColorProperty, path, mode, converter, converterParameter, stringFormat, source, targetNullValue, fallbackValue);
        
        public static TBindable BindPlaceholderSearchBar<TBindable>(this TBindable self,
            string path,
            BindingMode mode = BindingMode.Default,
            IValueConverter converter = null,
            object converterParameter = null,
            string stringFormat = null,
            object source = null,
            object targetNullValue = null,
            object fallbackValue = null) where TBindable : SearchBar
                => self.Bind(SearchBar.PlaceholderProperty, path, mode, converter, converterParameter, stringFormat, source, targetNullValue, fallbackValue);
        
        public static TBindable BindPlaceholderColorSearchBar<TBindable>(this TBindable self,
            string path,
            BindingMode mode = BindingMode.Default,
            IValueConverter converter = null,
            object converterParameter = null,
            string stringFormat = null,
            object source = null,
            object targetNullValue = null,
            object fallbackValue = null) where TBindable : SearchBar
                => self.Bind(SearchBar.PlaceholderColorProperty, path, mode, converter, converterParameter, stringFormat, source, targetNullValue, fallbackValue);
        
        public static TBindable BindFontFamilySearchBar<TBindable>(this TBindable self,
            string path,
            BindingMode mode = BindingMode.Default,
            IValueConverter converter = null,
            object converterParameter = null,
            string stringFormat = null,
            object source = null,
            object targetNullValue = null,
            object fallbackValue = null) where TBindable : SearchBar
                => self.Bind(SearchBar.FontFamilyProperty, path, mode, converter, converterParameter, stringFormat, source, targetNullValue, fallbackValue);
        
        public static TBindable BindFontSizeSearchBar<TBindable>(this TBindable self,
            string path,
            BindingMode mode = BindingMode.Default,
            IValueConverter converter = null,
            object converterParameter = null,
            string stringFormat = null,
            object source = null,
            object targetNullValue = null,
            object fallbackValue = null) where TBindable : SearchBar
                => self.Bind(SearchBar.FontSizeProperty, path, mode, converter, converterParameter, stringFormat, source, targetNullValue, fallbackValue);
        
        public static TBindable BindFontAttributesSearchBar<TBindable>(this TBindable self,
            string path,
            BindingMode mode = BindingMode.Default,
            IValueConverter converter = null,
            object converterParameter = null,
            string stringFormat = null,
            object source = null,
            object targetNullValue = null,
            object fallbackValue = null) where TBindable : SearchBar
                => self.Bind(SearchBar.FontAttributesProperty, path, mode, converter, converterParameter, stringFormat, source, targetNullValue, fallbackValue);
        
        public static TBindable BindHorizontalTextAlignmentSearchBar<TBindable>(this TBindable self,
            string path,
            BindingMode mode = BindingMode.Default,
            IValueConverter converter = null,
            object converterParameter = null,
            string stringFormat = null,
            object source = null,
            object targetNullValue = null,
            object fallbackValue = null) where TBindable : SearchBar
                => self.Bind(SearchBar.HorizontalTextAlignmentProperty, path, mode, converter, converterParameter, stringFormat, source, targetNullValue, fallbackValue);
        
        public static TBindable BindTextColorSearchBar<TBindable>(this TBindable self,
            string path,
            BindingMode mode = BindingMode.Default,
            IValueConverter converter = null,
            object converterParameter = null,
            string stringFormat = null,
            object source = null,
            object targetNullValue = null,
            object fallbackValue = null) where TBindable : SearchBar
                => self.Bind(SearchBar.TextColorProperty, path, mode, converter, converterParameter, stringFormat, source, targetNullValue, fallbackValue);
    }
}