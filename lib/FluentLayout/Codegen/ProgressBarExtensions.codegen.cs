// This file is generated by FluentCodegen
// It does not make sense to change something here
// No stress :)
using System;
namespace Xamarin.Forms.Fluent
{
    public static partial class ProgressBarExtensions
    {


        public static TBindable WithProgressBarChildrenReorderedEvent<TBindable>(this TBindable self,
            System.EventHandler handlerAction) where TBindable : ProgressBar
        {
            self.ChildrenReordered += handlerAction;

            return self;
        }

        public static TBindable ClearProgressBarChildrenReorderedHandlers<TBindable>(this TBindable self) where TBindable : ProgressBar
        {
            Xamarin.Forms.Fluent.EventExtensions.ClearEventInvocations(self, "ChildrenReordered");

            return self;
        }

        public static TBindable WithProgressBarFocusedEvent<TBindable>(this TBindable self,
            System.EventHandler<Xamarin.Forms.FocusEventArgs> handlerAction) where TBindable : ProgressBar
        {
            self.Focused += handlerAction;

            return self;
        }

        public static TBindable ClearProgressBarFocusedHandlers<TBindable>(this TBindable self) where TBindable : ProgressBar
        {
            Xamarin.Forms.Fluent.EventExtensions.ClearEventInvocations(self, "Focused");

            return self;
        }

        public static TBindable WithProgressBarMeasureInvalidatedEvent<TBindable>(this TBindable self,
            System.EventHandler handlerAction) where TBindable : ProgressBar
        {
            self.MeasureInvalidated += handlerAction;

            return self;
        }

        public static TBindable ClearProgressBarMeasureInvalidatedHandlers<TBindable>(this TBindable self) where TBindable : ProgressBar
        {
            Xamarin.Forms.Fluent.EventExtensions.ClearEventInvocations(self, "MeasureInvalidated");

            return self;
        }

        public static TBindable WithProgressBarSizeChangedEvent<TBindable>(this TBindable self,
            System.EventHandler handlerAction) where TBindable : ProgressBar
        {
            self.SizeChanged += handlerAction;

            return self;
        }

        public static TBindable ClearProgressBarSizeChangedHandlers<TBindable>(this TBindable self) where TBindable : ProgressBar
        {
            Xamarin.Forms.Fluent.EventExtensions.ClearEventInvocations(self, "SizeChanged");

            return self;
        }

        public static TBindable WithProgressBarUnfocusedEvent<TBindable>(this TBindable self,
            System.EventHandler<Xamarin.Forms.FocusEventArgs> handlerAction) where TBindable : ProgressBar
        {
            self.Unfocused += handlerAction;

            return self;
        }

        public static TBindable ClearProgressBarUnfocusedHandlers<TBindable>(this TBindable self) where TBindable : ProgressBar
        {
            Xamarin.Forms.Fluent.EventExtensions.ClearEventInvocations(self, "Unfocused");

            return self;
        }

        public static TBindable WithProgressBarBatchCommittedEvent<TBindable>(this TBindable self,
            System.EventHandler<Xamarin.Forms.Internals.EventArg<Xamarin.Forms.VisualElement>> handlerAction) where TBindable : ProgressBar
        {
            self.BatchCommitted += handlerAction;

            return self;
        }

        public static TBindable ClearProgressBarBatchCommittedHandlers<TBindable>(this TBindable self) where TBindable : ProgressBar
        {
            Xamarin.Forms.Fluent.EventExtensions.ClearEventInvocations(self, "BatchCommitted");

            return self;
        }

        public static TBindable WithProgressBarFocusChangeRequestedEvent<TBindable>(this TBindable self,
            System.EventHandler<Xamarin.Forms.VisualElement.FocusRequestArgs> handlerAction) where TBindable : ProgressBar
        {
            self.FocusChangeRequested += handlerAction;

            return self;
        }

        public static TBindable ClearProgressBarFocusChangeRequestedHandlers<TBindable>(this TBindable self) where TBindable : ProgressBar
        {
            Xamarin.Forms.Fluent.EventExtensions.ClearEventInvocations(self, "FocusChangeRequested");

            return self;
        }

        public static TBindable WithProgressBarChildAddedEvent<TBindable>(this TBindable self,
            System.EventHandler<Xamarin.Forms.ElementEventArgs> handlerAction) where TBindable : ProgressBar
        {
            self.ChildAdded += handlerAction;

            return self;
        }

        public static TBindable ClearProgressBarChildAddedHandlers<TBindable>(this TBindable self) where TBindable : ProgressBar
        {
            Xamarin.Forms.Fluent.EventExtensions.ClearEventInvocations(self, "ChildAdded");

            return self;
        }

        public static TBindable WithProgressBarChildRemovedEvent<TBindable>(this TBindable self,
            System.EventHandler<Xamarin.Forms.ElementEventArgs> handlerAction) where TBindable : ProgressBar
        {
            self.ChildRemoved += handlerAction;

            return self;
        }

        public static TBindable ClearProgressBarChildRemovedHandlers<TBindable>(this TBindable self) where TBindable : ProgressBar
        {
            Xamarin.Forms.Fluent.EventExtensions.ClearEventInvocations(self, "ChildRemoved");

            return self;
        }

        public static TBindable WithProgressBarDescendantAddedEvent<TBindable>(this TBindable self,
            System.EventHandler<Xamarin.Forms.ElementEventArgs> handlerAction) where TBindable : ProgressBar
        {
            self.DescendantAdded += handlerAction;

            return self;
        }

        public static TBindable ClearProgressBarDescendantAddedHandlers<TBindable>(this TBindable self) where TBindable : ProgressBar
        {
            Xamarin.Forms.Fluent.EventExtensions.ClearEventInvocations(self, "DescendantAdded");

            return self;
        }

        public static TBindable WithProgressBarDescendantRemovedEvent<TBindable>(this TBindable self,
            System.EventHandler<Xamarin.Forms.ElementEventArgs> handlerAction) where TBindable : ProgressBar
        {
            self.DescendantRemoved += handlerAction;

            return self;
        }

        public static TBindable ClearProgressBarDescendantRemovedHandlers<TBindable>(this TBindable self) where TBindable : ProgressBar
        {
            Xamarin.Forms.Fluent.EventExtensions.ClearEventInvocations(self, "DescendantRemoved");

            return self;
        }

        public static TBindable WithProgressBarPlatformSetEvent<TBindable>(this TBindable self,
            System.EventHandler handlerAction) where TBindable : ProgressBar
        {
            self.PlatformSet += handlerAction;

            return self;
        }

        public static TBindable ClearProgressBarPlatformSetHandlers<TBindable>(this TBindable self) where TBindable : ProgressBar
        {
            Xamarin.Forms.Fluent.EventExtensions.ClearEventInvocations(self, "PlatformSet");

            return self;
        }

        public static TBindable WithProgressBarPropertyChangedEvent<TBindable>(this TBindable self,
            System.ComponentModel.PropertyChangedEventHandler handlerAction) where TBindable : ProgressBar
        {
            self.PropertyChanged += handlerAction;

            return self;
        }

        public static TBindable ClearProgressBarPropertyChangedHandlers<TBindable>(this TBindable self) where TBindable : ProgressBar
        {
            Xamarin.Forms.Fluent.EventExtensions.ClearEventInvocations(self, "PropertyChanged");

            return self;
        }

        public static TBindable WithProgressBarBindingContextChangedEvent<TBindable>(this TBindable self,
            System.EventHandler handlerAction) where TBindable : ProgressBar
        {
            self.BindingContextChanged += handlerAction;

            return self;
        }

        public static TBindable ClearProgressBarBindingContextChangedHandlers<TBindable>(this TBindable self) where TBindable : ProgressBar
        {
            Xamarin.Forms.Fluent.EventExtensions.ClearEventInvocations(self, "BindingContextChanged");

            return self;
        }

        public static TBindable WithProgressBarPropertyChangingEvent<TBindable>(this TBindable self,
            Xamarin.Forms.PropertyChangingEventHandler handlerAction) where TBindable : ProgressBar
        {
            self.PropertyChanging += handlerAction;

            return self;
        }

        public static TBindable ClearProgressBarPropertyChangingHandlers<TBindable>(this TBindable self) where TBindable : ProgressBar
        {
            Xamarin.Forms.Fluent.EventExtensions.ClearEventInvocations(self, "PropertyChanging");

            return self;
        }
        
        public static TBindable BindProgressColorProgressBar<TBindable>(this TBindable self,
            string path,
            BindingMode mode = BindingMode.Default,
            IValueConverter converter = null,
            object converterParameter = null,
            string stringFormat = null,
            object source = null,
            object targetNullValue = null,
            object fallbackValue = null) where TBindable : ProgressBar
                => self.Bind(ProgressBar.ProgressColorProperty, path, mode, converter, converterParameter, stringFormat, source, targetNullValue, fallbackValue);
        
        public static TBindable BindProgressProgressBar<TBindable>(this TBindable self,
            string path,
            BindingMode mode = BindingMode.Default,
            IValueConverter converter = null,
            object converterParameter = null,
            string stringFormat = null,
            object source = null,
            object targetNullValue = null,
            object fallbackValue = null) where TBindable : ProgressBar
                => self.Bind(ProgressBar.ProgressProperty, path, mode, converter, converterParameter, stringFormat, source, targetNullValue, fallbackValue);
    }
}