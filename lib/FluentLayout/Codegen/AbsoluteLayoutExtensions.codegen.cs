// This file is generated by FluentCodegen
// It does not make sense to change something here
// No stress :)
using System;
namespace Xamarin.Forms.Fluent
{
    public static partial class AbsoluteLayoutExtensions
    {

        
        public static TBindable BindLayoutFlagsAbsoluteLayout<TBindable>(this TBindable self,
            string path,
            BindingMode mode = BindingMode.Default,
            IValueConverter converter = null,
            object converterParameter = null,
            string stringFormat = null,
            object source = null,
            object targetNullValue = null,
            object fallbackValue = null) where TBindable : AbsoluteLayout
                => self.Bind(AbsoluteLayout.LayoutFlagsProperty, path, mode, converter, converterParameter, stringFormat, source, targetNullValue, fallbackValue);
        
        public static TBindable SetLayoutFlags<TBindable>(this TBindable bindable, AbsoluteLayoutFlags value) where TBindable : BindableObject
            => bindable.Set(AbsoluteLayout.LayoutFlagsProperty, value);
        
        public static TBindable BindLayoutBoundsAbsoluteLayout<TBindable>(this TBindable self,
            string path,
            BindingMode mode = BindingMode.Default,
            IValueConverter converter = null,
            object converterParameter = null,
            string stringFormat = null,
            object source = null,
            object targetNullValue = null,
            object fallbackValue = null) where TBindable : AbsoluteLayout
                => self.Bind(AbsoluteLayout.LayoutBoundsProperty, path, mode, converter, converterParameter, stringFormat, source, targetNullValue, fallbackValue);
        
        public static TBindable SetLayoutBounds<TBindable>(this TBindable bindable, Rectangle value) where TBindable : BindableObject
            => bindable.Set(AbsoluteLayout.LayoutBoundsProperty, value);
    }
}